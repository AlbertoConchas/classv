apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "backend.name" . }}
  labels:
{{ include "backend.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: {{ .Values.deployStrategy }}
    rollingUpdate:
      maxSurge: {{ .Values.deployMaxSurge }}
      maxUnavailable: {{ .Values.deployMaxUnavailable }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "backend.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "backend.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      volumes:
      - name: backend-configmaps
        configMap: 
          name: {{ include "backend.name" . }}-configmap
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.repository }}:{{ .Values.tag }}"
          imagePullPolicy: {{ .Values.pullPolicy }}
          volumeMounts:
          - name: backend-configmaps
            mountPath: "/shared/config"
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            - name: NODE_ENV
              value: "{{ .Values.nodeEnv }}"
            - name: DBPASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.mongosSecret }}"
                  key: mongodb-password
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
